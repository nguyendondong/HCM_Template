import { contentService } from '../services/contentService';
import { initializeDefaultHeritageData } from '../services/enhancedHeritageService';
import { initializeDefaultPageContent } from '../services/pageContentService';

/**
 * Script kh·ªüi t·∫°o t·∫•t c·∫£ d·ªØ li·ªáu m·∫∑c ƒë·ªãnh cho Firebase
 * Ch·∫°y script n√†y ƒë·ªÉ t·∫°o d·ªØ li·ªáu ban ƒë·∫ßu cho ·ª©ng d·ª•ng
 */
export async function initializeAllDefaultData(): Promise<void> {
  console.log('üöÄ B·∫Øt ƒë·∫ßu kh·ªüi t·∫°o d·ªØ li·ªáu m·∫∑c ƒë·ªãnh...');

  try {
    // 1. Kh·ªüi t·∫°o n·ªôi dung c∆° b·∫£n (Hero, Navigation, Footer, Site Config)
    console.log('üìù Kh·ªüi t·∫°o n·ªôi dung c∆° b·∫£n...');
    await contentService.initializeDefaultContent();
    console.log('‚úÖ Ho√†n th√†nh n·ªôi dung c∆° b·∫£n');

    // 2. Kh·ªüi t·∫°o d·ªØ li·ªáu di t√≠ch n√¢ng cao
    console.log('üèõÔ∏è Kh·ªüi t·∫°o d·ªØ li·ªáu di t√≠ch...');
    await initializeDefaultHeritageData();
    console.log('‚úÖ Ho√†n th√†nh d·ªØ li·ªáu di t√≠ch');

    // 3. Kh·ªüi t·∫°o n·ªôi dung trang (Documents, VR, Mini Games)
    console.log('üì± Kh·ªüi t·∫°o n·ªôi dung trang...');
    await initializeDefaultPageContent();
    console.log('‚úÖ Ho√†n th√†nh n·ªôi dung trang');

    console.log('üéâ Kh·ªüi t·∫°o d·ªØ li·ªáu ho√†n t·∫•t!');
    console.log('');
    console.log('üìã D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c t·∫°o:');
    console.log('   - N·ªôi dung Hero Section');
    console.log('   - Menu Navigation');
    console.log('   - Footer Content');
    console.log('   - C·∫•u h√¨nh trang web');
    console.log('   - Di t√≠ch di s·∫£n n√¢ng cao');
    console.log('   - N·ªôi dung trang Documents');
    console.log('   - N·ªôi dung trang VR Experience');
    console.log('   - N·ªôi dung trang Mini Games');
    console.log('');
    console.log('üî• ·ª®ng d·ª•ng ƒë√£ s·∫µn s√†ng s·ª≠ d·ª•ng v·ªõi d·ªØ li·ªáu t·ª´ Firebase!');

  } catch (error) {
    console.error('‚ùå L·ªói trong qu√° tr√¨nh kh·ªüi t·∫°o d·ªØ li·ªáu:', error);
    throw error;
  }
}

/**
 * Reset v√† kh·ªüi t·∫°o l·∫°i t·∫•t c·∫£ d·ªØ li·ªáu
 * Ch·ªâ s·ª≠ d·ª•ng trong development
 */
export async function resetAndInitializeData(): Promise<void> {
  console.log('‚ö†Ô∏è C·∫¢NH B√ÅO: ƒêang reset t·∫•t c·∫£ d·ªØ li·ªáu...');

  // Trong th·ª±c t·∫ø, b·∫°n c√≥ th·ªÉ mu·ªën x√≥a d·ªØ li·ªáu c≈© tr∆∞·ªõc
  // Tuy nhi√™n, Firestore kh√¥ng h·ªó tr·ª£ x√≥a collection natively t·ª´ client
  // B·∫°n c·∫ßn s·ª≠ d·ª•ng Firebase Admin SDK ho·∫∑c Firebase CLI

  await initializeAllDefaultData();
}

/**
 * Kh·ªüi t·∫°o d·ªØ li·ªáu m·ªôt c√°ch an to√†n
 * Ch·ªâ t·∫°o d·ªØ li·ªáu n·∫øu ch∆∞a t·ªìn t·∫°i
 */
export async function safeInitializeData(): Promise<void> {
  console.log('üîç Ki·ªÉm tra d·ªØ li·ªáu hi·ªán c√≥...');

  try {
    // Ki·ªÉm tra xem ƒë√£ c√≥ d·ªØ li·ªáu ch∆∞a
    // B·∫°n c√≥ th·ªÉ implement logic ki·ªÉm tra ·ªü ƒë√¢y

    console.log('üÜï Kh·ªüi t·∫°o d·ªØ li·ªáu m·ªõi...');
    await initializeAllDefaultData();

  } catch (error) {
    console.error('‚ùå L·ªói kh·ªüi t·∫°o d·ªØ li·ªáu an to√†n:', error);
    throw error;
  }
}

// Export script runner function
export async function runDataInitialization(): Promise<void> {
  const isDevelopment = import.meta.env.DEV;

  if (isDevelopment) {
    console.log('üîß Development mode: Cho ph√©p kh·ªüi t·∫°o d·ªØ li·ªáu');
    await initializeAllDefaultData();
  } else {
    console.log('üöÄ Production mode: Kh·ªüi t·∫°o d·ªØ li·ªáu an to√†n');
    await safeInitializeData();
  }
}

// Ch·∫°y script n·∫øu file ƒë∆∞·ª£c import tr·ª±c ti·∫øp
if (import.meta.env.VITE_AUTO_INITIALIZE_DATA === 'true') {
  runDataInitialization().catch(console.error);
}
